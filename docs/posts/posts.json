[
  {
    "path": "posts/2021-01-31-welcome/",
    "title": "Text Mining a George RR Martin Classic",
    "description": "Using text analysis to observe trends in 'A Clash of Kings'.",
    "author": [
      {
        "name": "Caitlin Reza",
        "url": {}
      }
    ],
    "date": "2021-01-31",
    "categories": [],
    "contents": "\nSummary\nIn this document, I use text mining analysis and basic wrangling to assess text patterns in George RR Martin’s 1999 classic ‘A Clash of Kings’, because I will never get around to reading it any other way.\nText: Martin, George R. R. A Clash of Kings. New York: Bantam Books, 1999. Internet Archive, http://archive.org/details/fire-blood-george-rr-martin.\n\n\n# Read in the PDF\nclash_kings_text <- pdf_text(\"A-Clash-Of-Kings-George-RR-Martin.pdf\")\n\n\n\n\n\n# Let's make it tidy\n\nclash_tidy <- data.frame(clash_kings_text) %>%  # convert into data frame, split it up by page\n  mutate(text_full = str_split(clash_kings_text, pattern = '\\\\n')) %>% # split lines (each PDF line ends with \\)\n    unnest(text_full) %>% \n  mutate(text_full = str_trim(text_full)) \n\n\n\n\n\n# But a bit more tidy\n\nclash_df <- clash_tidy %>% \n  slice(-(1:127))  # Get rid of all the unnecessary publishing grime\n\n# Don't separate by chapter because George RR Martin for some reason found it necessary to separate his book by chapter-less names \n \n# Separate by word (each word a single line)\nclash_tokens <- clash_df %>% \n  unnest_tokens(word, text_full) %>% \n  select(-clash_kings_text)\n\n\n\n\n\n# Count the occurrence of every word\nclash_wordcount <- clash_tokens %>% \n  count(word)\n\n# Get rid of those pesky \"stopwords\" using antijoin()!\nclash_nonstop_words <- clash_tokens %>% \n  anti_join(stop_words)\n# Ponder if \"Game Thrones\" has the same ring to it as \"Game of Thrones\"\n\n# (it doesn't)\n\n\n\n\n\n# Re-count the words, this time omitting stopwords\nnonstop_counts <- clash_nonstop_words %>% \n  count(word) %>% \n  arrange(-n)\n\n\n\n\n\n# Top 10 words used in Clash of Kings?\ntop_10_words <- nonstop_counts %>% \n  slice(1:10)\n\n# Plot it just for fun\nggplot(data = top_10_words, aes(x = reorder(word, n), y = n, fill = \"red\")) +\n  geom_col(color = \"tomato4\") +\n  coord_flip() + # Make it easy on the eye\n  labs(x = \"Word\",\n       y = \"Frequency of Use\",\n       title = \"Top 10 Words in George RR Martin's 'A Clash of Kings'\") +\n  theme(legend.position = \"none\")\n\n\n\n\nWordcloud: Top 100 Words\n\n\n# Creating a WordCloud\n\nclash_top100 <- nonstop_counts %>% \n  arrange(-n) %>% \n  slice(1:100) # Make a subset of 100 most used words\n\nclash_cloud <- ggplot(data = clash_top100, aes(label = word)) +\n  geom_text_wordcloud(aes(color = n, size = n), shape = \"diamond\", backgroundColor = \"grey\") +\n  scale_size_area(max_size = 6) +\n  scale_color_gradientn(colors = c(\"brown\",\"orange\",\"red\")) +\n  theme_minimal()\n  \n\nclash_cloud\n\n\n\n\nWordcloud: Top 300 Words\n\n\n# Make an interactive word cloud of top 300 words\nclash_top300 <- nonstop_counts %>% \n  arrange(-n) %>% \n  slice(1:300)\n\n\nwordcloud2(clash_top300, size = .65, color = \"orange\", backgroundColor=\"black\", shape = \"star\")\n\n\n\n{\"x\":{\"word\":[\"lord\",\"ser\",\"tyrion\",\"king\",\"black\",\"hand\",\"jon\",\"told\",\"arya\",\"time\",\"eyes\",\"lady\",\"theon\",\"bran\",\"brother\",\"red\",\"stannis\",\"head\",\"father\",\"boy\",\"dead\",\"maester\",\"gods\",\"night\",\"son\",\"sansa\",\"half\",\"blood\",\"catelyn\",\"day\",\"heard\",\"left\",\"castle\",\"sword\",\"white\",\"stark\",\"girl\",\"water\",\"called\",\"king’s\",\"looked\",\"renly\",\"fire\",\"walls\",\"queen\",\"gold\",\"joffrey\",\"don’t\",\"i’ll\",\"lannister\",\"winterfell\",\"hear\",\"davos\",\"hard\",\"horse\",\"hot\",\"feet\",\"found\",\"green\",\"he’d\",\"cersei\",\"i’m\",\"robb\",\"stone\",\"wine\",\"it’s\",\"knight\",\"hands\",\"wall\",\"dark\",\"battle\",\"beneath\",\"city\",\"sea\",\"hair\",\"iron\",\"cloak\",\"house\",\"door\",\"fingers\",\"woman\",\"grey\",\"grace\",\"dany\",\"stood\",\"watch\",\"true\",\"sister\",\"lords\",\"mouth\",\"hundred\",\"he’s\",\"voice\",\"mother\",\"varys\",\"sweet\",\"brought\",\"brothers\",\"robert\",\"steel\",\"past\",\"wind\",\"horses\",\"light\",\"fool\",\"leave\",\"hall\",\"prince\",\"cold\",\"fear\",\"lost\",\"wolf\",\"wood\",\"arms\",\"father’s\",\"sound\",\"tower\",\"heart\",\"hodor\",\"north\",\"rest\",\"strong\",\"you’re\",\"pie\",\"killed\",\"there’s\",\"bed\",\"rode\",\"moment\",\"close\",\"child\",\"daughter\",\"kill\",\"knights\",\"landing\",\"love\",\"word\",\"words\",\"bear\",\"sat\",\"yoren\",\"die\",\"laughed\",\"won’t\",\"you’ll\",\"died\",\"that’s\",\"war\",\"bring\",\"call\",\"raised\",\"uncle\",\"harrenhal\",\"pale\",\"river\",\"send\",\"ran\",\"reached\",\"thousand\",\"command\",\"set\",\"rose\",\"smiled\",\"silver\",\"sleep\",\"table\",\"talk\",\"blue\",\"fight\",\"i’d\",\"life\",\"summer\",\"throat\",\"cloaks\",\"death\",\"gate\",\"inside\",\"bastard\",\"children\",\"smile\",\"air\",\"jaime\",\"mormont\",\"cut\",\"feel\",\"hold\",\"remembered\",\"rock\",\"speak\",\"tywin\",\"brienne\",\"bloody\",\"i’ve\",\"sons\",\"golden\",\"luwin\",\"moved\",\"ride\",\"cup\",\"days\",\"remember\",\"smell\",\"trees\",\"broken\",\"ground\",\"people\",\"tall\",\"arm\",\"fell\",\"free\",\"guards\",\"morning\",\"rodrik\",\"teeth\",\"truth\",\"pulled\",\"ships\",\"walder\",\"women\",\"safe\",\"shadow\",\"dragons\",\"burned\",\"held\",\"meant\",\"empty\",\"ghost\",\"heavy\",\"squire\",\"commanded\",\"gendry\",\"matter\",\"swords\",\"soft\",\"south\",\"storm’s\",\"wolves\",\"baratheon\",\"foot\",\"honor\",\"riverrun\",\"thick\",\"frey\",\"steps\",\"watched\",\"wife\",\"burning\",\"coming\",\"home\",\"hope\",\"neck\",\"bronn\",\"crown\",\"helm\",\"shouted\",\"we’ll\",\"boys\",\"closed\",\"world\",\"answer\",\"lannisters\",\"snow\",\"ten\",\"cressen\",\"guard\",\"qhorin\",\"wore\",\"yard\",\"axe\",\"deep\",\"flames\",\"gates\",\"smoke\",\"lay\",\"passed\",\"throne\",\"ears\",\"return\",\"she’d\",\"thin\",\"armor\",\"hurt\",\"lips\",\"littlefinger\",\"lommy\",\"run\",\"skin\",\"afraid\",\"brown\",\"sun\",\"times\",\"food\",\"rickon\",\"strength\",\"filled\",\"leather\",\"they’d\",\"dream\",\"eye\",\"fall\"],\"freq\":[1420,1147,654,575,508,487,450,446,432,422,420,410,390,387,386,384,372,368,356,349,328,309,303,296,289,284,280,274,274,266,264,262,261,257,256,254,249,249,244,238,238,233,232,231,229,228,228,225,224,222,221,219,217,214,210,210,208,208,208,207,205,205,202,202,202,200,198,197,197,190,189,189,185,183,181,181,179,179,178,178,178,174,173,166,166,164,163,162,161,161,160,159,156,153,153,151,148,147,147,145,144,144,141,140,137,137,136,136,135,135,135,135,135,133,132,132,131,130,130,130,129,129,129,127,126,126,125,123,122,121,119,119,119,119,119,119,119,119,118,118,118,117,115,115,114,113,113,113,112,112,112,112,111,111,111,111,110,109,109,108,108,107,107,106,106,106,106,105,105,105,105,105,105,104,104,104,104,103,103,103,102,102,102,101,101,101,101,101,101,101,100,99,99,99,98,98,98,98,97,97,97,97,97,96,96,96,96,95,95,95,95,94,94,94,94,93,93,93,93,92,92,91,90,90,90,89,89,89,89,88,88,88,88,87,87,87,87,86,86,86,86,86,85,85,85,85,84,84,84,84,84,83,83,83,83,83,82,82,82,81,81,81,81,80,80,80,80,80,79,79,79,79,79,78,78,78,77,77,77,77,76,76,76,76,76,76,76,75,75,75,75,74,74,74,73,73,73,72,72,72],\"fontFamily\":\"Segoe UI\",\"fontWeight\":\"bold\",\"color\":\"orange\",\"minSize\":0,\"weightFactor\":0.0823943661971831,\"backgroundColor\":\"black\",\"gridSize\":0,\"minRotation\":-0.785398163397448,\"maxRotation\":0.785398163397448,\"shuffle\":true,\"rotateRatio\":0.4,\"shape\":\"star\",\"ellipticity\":0.65,\"figBase64\":null,\"hover\":null},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el,x){\\n                        console.log(123);\\n                        if(!iii){\\n                          window.location.reload();\\n                          iii = False;\\n\\n                        }\\n  }\",\"data\":null}]}}\nSentiment Analysis\n\n\n# Load the lexicon: I'll choose the \"afinn\" lexicon\n# get_sentiments(lexicon = \"afinn\")\n\n# Bind the file with all of the non- \"stop words\" to the lexicon\nclash_afinn <- clash_nonstop_words %>% \n  inner_join(get_sentiments(\"afinn\")) # This put a value on each word in the book, each value corresponds with an emotion bin\n\n\n# Count the number of words per value\nafinn_counts <- clash_afinn %>% \n  count(value) %>% \n  mutate(emotion = case_when( # Add descriptions so you can color code them later in ggplot\n    value %in% c(-5, -4, -3, -2, -1) ~ \"Negative\",\n    value %in% c(1, 2, 3, 4, 5) ~ \"Positive\"\n  ))\n\n\n\n\n\n# Create a visualization showing the distribution of word-emotion-bin associations\n\n\nggplot(data = afinn_counts, aes(x = value,y = n, fill = emotion)) + \n  geom_col() + \n  facet_wrap(~emotion, scales = \"free\") +\n  labs(x = \"Emotional Value (AFINN Lexicon)\",\n       y = \"Frequency Used\",\n       title = \"Emotional Sentiment Trends in 'A Clash of Kings'\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n",
    "preview": "posts/2021-01-31-welcome/distill-preview.png",
    "last_modified": "2021-02-25T09:05:26-08:00",
    "input_file": {}
  },
  {
    "path": "posts/post_3/",
    "title": "Visualizing Salmon Population Trends with Time Series and Seasonplots",
    "description": "Coho, Jack Coho, and Steelhead in the Columbia River Basin",
    "author": [
      {
        "name": "Caitie Reza, Laurel Abowd, and Dylan Glave",
        "url": {}
      }
    ],
    "date": "2021-01-31",
    "categories": [],
    "contents": "\nNOAA’s Historic Fisheries Collection Location: Oregon, Oregon City.Overview\nThe Columbia River Basin watershed is home to several species of salmonids, inlcuding Sockeye, Coho, Jack Coho, Steelhead, and Wild Steelhead. Columbia River DART (Data Access in Real Time) provides comprehensive population and environmental data for 10 species in multiple survey locations in the basin over the last 100 years. In this report, we utilize the DART data to visualize population and adult passage trends for Coho, Jack Coho, and Steelhead across the Willamette Falls fish ladder.\nLocation\nMap of the Willammette River basin in Oregon, including Willammette Falls fish ladder site. Source: R. Kirk Schroeder (Canadian Science Publishing)\n\n# Read in data\nfish_raw <- read_csv(\"willamette_fish_passage.csv\")\n# Make a subset with coho, steelhead, jack coho\n\nfish_sub <- fish_raw %>% \n  clean_names() %>% \n  select(project, date, coho, jack_coho, steelhead) \n\n# Create time series\nfish_ts <- fish_sub %>% \n  mutate(date = mdy(date)) %>% \n  as_tsibble(key = NULL, index = date)\n\n\n\nData Citation\nColumbia River Basin DART Adult Passage Graphics & Text | Columbia Basin Research. http://www.cbr.washington.edu/dart/query/adult_graph_text.\nVisualizations\nTime Series\nTime Series of Coho, Jack Coho, and Steelhead at Willamette Falls\n\n\n# Tab 1 - time series graph\n\n# Replace na values with 0\nfish_ts_na <- fish_ts %>% \n  replace(is.na(.), 0)\n\n# Create ts graph, but in separate panels\nts_coho <- ggplot(data = fish_ts_na) +\n  geom_line(aes(x = date, y = coho), color = \"deeppink2\") +\n  labs(y = \"Coho Count\", x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90))\n\nts_steelhead <- ggplot(data = fish_ts_na) +\n  geom_line(aes(x = date, y = steelhead), color = \"goldenrod\") +\n  labs(y = \"Steelhead Count\", x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90))\n\nts_jack_coho <- ggplot(data = fish_ts_na) +\n  geom_line(aes(x = date, y = jack_coho), color = \"blue2\") +\n  labs(y = \"Jack Coho Count\", x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90))\n\nlibrary(patchwork)\n\nts_coho | ts_steelhead | ts_jack_coho \n\n\n\n\nFigure 1. Shows visual counts of Coho (pink),Steelhead (golden), and Jack Coho (blue) in adult passages in the Willamette Falls Columbia River DART survey location. Observations were taken daily from 2001 to 2010. Data source: Columbia Basin Research.\nTime Series Takeaways\nThere appears to be seasonality for all three fish species (Coho, Steelhead, and Jack Coho).\nSteelhead and Jack Coho counts remain relatively stable throughout the time period, whereas Coho counts increased and peaked toward the end of the time period.\nSeasonplots\nDaily Counts of Coho, Jack Coho, and Steelhead at Willamette Falls\n\n\n# Create Seasonplot showing value (counts) for each day over entire span of data, store as object\nfinal <- annual_fish %>% \n  gg_season(y = value) +  \n  facet_wrap(~species, ncol = 1, scales = \"free\") %>% \n  labs(x = \"Month\", y = \"Counts\") +\n  theme_minimal()\n\nfinal\n\n\n\n\nFigure 2. shows visual counts of Coho, Jack Coho, and Steelhead in adult passages in the Willamette Falls Columbia River DART survey location. Observations were taken daily from 2001 to 2010. Data source: Columbia Basin Research.\nSeasonplots Takeaways\nOn average, Coho and Jack Coho use the Willamette Falls fish passages only during the Fall months, while Steelhead seem to use them from the early spring into mid-summer.\nThe Coho population rapidly increases in later years (2009-2010), with peak annual visual counts in 2010 more than triple those in 2008. This upward trend is seen on smaller levels in the Jack Coho and Steelhead populations.\nAnnual counts\nWillamette Falls Annual Salmonoid Counts\n\n\nannual_fish <- fish_ts %>%\n  mutate(year = year(date)) %>% \npivot_longer(`coho`:`steelhead`,\n               names_to = \"species\",\n               values_to = \"value\") %>% \n  group_by(species) %>% \nindex_by(year) %>% \nsummarize(total = sum(value, na.rm = TRUE))\n\n\n\n\n\n# Now let's plot this!\nggplot(data = annual_fish, aes(x = year, y = total, color = species)) + \n  geom_line() +\n scale_color_manual(values=c(\"deeppink2\", \"blue2\", \"goldenrod\")) +\n  geom_point(size = 2,\n             alpha = 0.8) +\n  scale_x_continuous(breaks = c(2000, 2002, 2004, 2006, 2008, 2010)) +\n  labs( x = \"Year\",\n        y = \"Annual Fish Observations\",\n        color = \"Species\") +\n  theme_minimal()\n\n\n\n\nFigure 3. Shows counts of Coho (pink),Steelhead (golden), and Jack Coho (blue), totaled annually, from the Willamette Falls observation site. Data source: Columbia Basin Research.\nCoho and Steelhead both had large jumps in abundance in the late 2000s. This occurred for Coho in 2008, and Steelhead in 2009.\nWhile Steelhead showed the highest abundance in all years but one (2009,) it is also changed more sporadically than the other two fish species.\nIt may be worth looking at older data, to see if Jack Coho abundance was ever on par with the other two fish. It may have declined heavily at some point. Alternatively, all 3 species mau have declines prior to 2000, and only Jack Coho has not rebounded.\n\n\n\n",
    "preview": "posts/post_3/distill-preview.png",
    "last_modified": "2021-03-13T19:37:31-08:00",
    "input_file": "salmon.utf8.md"
  },
  {
    "path": "posts/Post_2/",
    "title": "Exploring Species-Specific Traits with Binary Logistic Regression",
    "description": "Two Species of Palmetto Trees Walk Into an .rmd file",
    "author": [
      {
        "name": "Caitie Reza",
        "url": {}
      }
    ],
    "date": "2021-01-20",
    "categories": [],
    "contents": "\nSummary\nThis report utilizes data from the Archbold Biological Station in South-Central Florida (see citation below) to explore the phenology and assess the classification of two plant species of Palmetto trees: Serenoa repens and Sabal etonia. Here, we use binary logistic regression to analyze the relationship between the species and an array of dependent variables.\nData: Abrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative.\n\n\n# 1. Read in Data\npalmetto <- read_csv(\"palmetto.csv\", \n  col_types = cols(.default = \"c\")) %>%  #convert all to character\n    mutate(height = as.numeric(height)) %>% # convert our explanatory variables to numeric\n  mutate(length = as.numeric(length)) %>% \n  mutate(width = as.numeric(width)) %>% \n  mutate(green_lvs = as.numeric(green_lvs))\n\n\n\nFigures 1-3: Visualizing Phenotypic Differences Between Palmetto Species\n\n\n#  Visualize relationships (or lack thereof) between my predictor variables to see if I spot any patterns\n\nggplot(data = palmetto, aes(x = green_lvs, y = height)) +\n         geom_point(aes(color = species)) +\n         facet_wrap(~species, scales = \"free\") +\n  labs(x = \"Number of New Green Leaves\", y = \"Plant Height (cm)\",\n       color = \"Species\")\n\n\n\n\nFigure 1. shows the relationship between green leaf counts and plant height (cm) in 2 unidentified species of palmetto tree. Note the different scale between x axes (number of green leaves) and y axes (plant height).\nBoth species exhibit a relatively positive relationship between green leaf counts and plant height.\n\n\nggplot(data = palmetto, aes(x = species, y = green_lvs, na.rm = TRUE)) +\n  geom_jitter(aes(color = species)) +\n  labs(x = \"Species\", y = \"Number of New Green Leaves\",\n       color = \"Species\") +\n  theme(legend.position = \"none\") \n\n\n\n\nFigure 2. demonstrates the number of green leaves on Palmetto plants of Species 1 and 2.\nBased on the count data, Species 1 plants tend to have more new, green leaves as compared to Species 2.\n\n\nggplot(data = palmetto, aes(x = length, y = width)) +\n  geom_point(aes(color = species)) +\n  facet_wrap(~species) +\n  labs(x= \"Canopy Length (cm)\", y = \"Canopy Width (cm)\",\n       color = \"Species\")\n\n\n\n\nFigure 3. shows the relationship between canopy length (cm) and canopy width (cm) measured for both Palmetto species.\nAt first glance, there seems to be a positive correlation between canopy length and canopy width in both species.\nBinary Logistic Regression Model\n\n\n\n# Binary Logistic Regression\n\n# Make subset with just our predictor + explanatory variables\n\npalm_sub <- palmetto %>% \n  select(species, height:green_lvs) %>% \n  mutate(species = as.factor(species)) # make species a factor\n\n# Check the levels in the console \n# levels(palm_sub$species)\n\n# Perform BLR\n\npalm_blr <- glm(species ~ height + length + width + green_lvs, \n                            data = palm_sub, \n                            family = \"binomial\")\n# View my model in the console 'view(palm_blr)'\n\n\n# View model summary in the console 'summary(palm_blr)'\n\n\n# Make it tidy\nblr_tidy <- broom::tidy(palm_blr)\n\nblr_tidy\n\n\nA tibble: 5 x 5\nterm estimate std.error statistic p.value  1 (Intercept) 3.23 0.142 22.7 3.42e-114 2 height -0.0292 0.00231 -12.7 8.69e- 37 3 length 0.0458 0.00187 24.6 3.73e-133 4 width 0.0394 0.00210 18.8 1.05e- 78 5 green_lvs -1.91 0.0389 -49.1 0.\n# Make finalized table Containing Binary Logistic Regression Model information\n\nstargazer(palm_blr, type = \"html\",\n          title = \"**Table 1.** Predicting Species using Palmetto height, canopy length, canopy width, and Leaf Count\",\n          covariate.labels = c(\"Height\", \"Canopy Length\", \"Canopy Width\",\n                               \"Number of Green Leaves\"),\n          dep.var.caption  = \"Dependent Variable:\",\n          dep.var.labels   = \"Species\")\n\n\n\nTable 1. Predicting Species using Palmetto height, canopy length, canopy width, and Leaf Count\n\n\n\n\n\n\nDependent Variable:\n\n\n\n\n\n\n\n\nSpecies\n\n\n\n\nHeight\n\n\n-0.029***\n\n\n\n(0.002)\n\n\n\n\n\n\nCanopy Length\n\n\n0.046***\n\n\n\n(0.002)\n\n\n\n\n\n\nCanopy Width\n\n\n0.039***\n\n\n\n(0.002)\n\n\n\n\n\n\nNumber of Green Leaves\n\n\n-1.908***\n\n\n\n(0.039)\n\n\n\n\n\n\nConstant\n\n\n3.227***\n\n\n\n(0.142)\n\n\n\n\n\n\n\n\nObservations\n\n\n12,267\n\n\nLog Likelihood\n\n\n-2,592.281\n\n\nAkaike Inf. Crit.\n\n\n5,194.562\n\n\n\n\nNote:\n\n\np<0.1; p<0.05; p<0.01\n\n\n\nClassifying Palmetto Species\n\n\n# Find probability of association between explatory variables + species\nblr_fitted <- palm_blr %>% \n  broom::augment(type.predict = \"response\") %>% \n   mutate(predicted_species = case_when(\n     .fitted >= .5 ~ \"2\",\n     .fitted < .5 ~ \"1\")) %>% \n  mutate(species_name = case_when( # Replace 1's and 2's in species column with species names, for clarity and to make them characters\n    predicted_species %in% 1 ~ \"one\",\n    predicted_species %in% 2 ~ \"two\"))\n\n\n# Visualize for different explanatory variables, store as object so it doesn't come up in html\n\napple <- ggplot(data = blr_fitted, aes(x = green_lvs, y = .fitted)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(aes(color = species), se = FALSE)\n\n\n\n\n\n# Make subset of blr_fitted\nfitted_sub <- blr_fitted %>% \n  select(species, .fitted) %>% \n  mutate(predicted_species = case_when(\n    .fitted >= .5 ~ \"2\",\n    .fitted < .5 ~ \"1\")) %>% \n  mutate(outcome = case_when(\n    species == predicted_species ~ \"Correct\",\n    species != predicted_species ~ \"Incorrect\")) %>% \n  mutate(species = as.numeric(species)) %>% \n  mutate(predicted_species = as.numeric(predicted_species)) %>% \n  group_by(species, outcome) %>% \n  count(outcome) %>% \n  pivot_wider(names_from = outcome,\n              values_from = n) %>% \n  mutate(species = case_when(\n    species %in% 1 ~ \"Serenoa repens (Species 1)\",\n    species %in% 2 ~ \"Sabal etonia (Species 2)\")) %>% \n      column_to_rownames(var = \"species\")\n\n\n# Add a column showing percent (thanks google)\n\nfitted_sub['% Correct'] = fitted_sub['Correct'] / (fitted_sub['Incorrect'] + fitted_sub['Correct']) * 100\n\n\n\nTable 2. shows the number and proportion of plants classified correctly for each species. Here, “Classified Correctly” means that the individual S. repens surveyed was correctly identified as S. repens\n\n\n# Make Pretty using Kable and view!\nfitted_sub %>% \n  kable(digits = 2) %>% \n   kable_styling(bootstrap_options = \"striped\", full_width = FALSE)\n\n\n\n\n\nCorrect\n\n\nIncorrect\n\n\n% Correct\n\n\nSerenoa repens (Species 1)\n\n\n5548\n\n\n564\n\n\n90.77\n\n\nSabal etonia (Species 2)\n\n\n5701\n\n\n454\n\n\n92.62\n\n\n\n\n\n",
    "preview": "posts/Post_2/distill-preview.png",
    "last_modified": "2021-03-13T19:38:33-08:00",
    "input_file": "Untitled.utf8.md"
  }
]
